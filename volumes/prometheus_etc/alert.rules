"groups":
- name: django.rules
  rules:
  - record: job:django_http_requests_before_middlewares_total:sum_rate30s
    expr: sum(rate(django_http_requests_before_middlewares_total[30s])) BY (job)
  - record: job:django_http_requests_unknown_latency_total:sum_rate30s
    expr: sum(rate(django_http_requests_unknown_latency_total[30s])) BY (job)
  - record: job:django_http_ajax_requests_total:sum_rate30s
    expr: sum(rate(django_http_ajax_requests_total[30s])) BY (job)
  - record: job:django_http_responses_before_middlewares_total:sum_rate30s
    expr: sum(rate(django_http_responses_before_middlewares_total[30s])) BY (job)
  - record: job:django_http_requests_unknown_latency_including_middlewares_total:sum_rate30s
    expr: sum(rate(django_http_requests_unknown_latency_including_middlewares_total[30s]))
      BY (job)
  - record: job:django_http_requests_body_total_bytes:sum_rate30s
    expr: sum(rate(django_http_requests_body_total_bytes[30s])) BY (job)
  - record: job:django_http_responses_streaming_total:sum_rate30s
    expr: sum(rate(django_http_responses_streaming_total[30s])) BY (job)
  - record: job:django_http_responses_body_total_bytes:sum_rate30s
    expr: sum(rate(django_http_responses_body_total_bytes[30s])) BY (job)
  - record: job:django_http_requests_total:sum_rate30s
    expr: sum(rate(django_http_requests_total_by_method[30s])) BY (job)
  - record: job:django_http_requests_total_by_method:sum_rate30s
    expr: sum(rate(django_http_requests_total_by_method[30s])) BY (job, method)
  - record: job:django_http_requests_total_by_transport:sum_rate30s
    expr: sum(rate(django_http_requests_total_by_transport[30s])) BY (job, transport)
  - record: job:django_http_requests_total_by_view:sum_rate30s
    expr: sum(rate(django_http_requests_total_by_view_transport_method[30s])) BY (job,
      view)
  - record: job:django_http_requests_total_by_view_transport_method:sum_rate30s
    expr: sum(rate(django_http_requests_total_by_view_transport_method[30s])) BY (job,
      view, transport, method)
  - record: job:django_http_responses_total_by_templatename:sum_rate30s
    expr: sum(rate(django_http_responses_total_by_templatename[30s])) BY (job, templatename)
  - record: job:django_http_responses_total_by_status:sum_rate30s
    expr: sum(rate(django_http_responses_total_by_status[30s])) BY (job, status)
  - record: job:django_http_responses_total_by_status_name_method:sum_rate30s
    expr: sum(rate(django_http_responses_total_by_status_name_method[30s])) BY (job,
      status, name, method)
  - record: job:django_http_responses_total_by_charset:sum_rate30s
    expr: sum(rate(django_http_responses_total_by_charset[30s])) BY (job, charset)
  - record: job:django_http_exceptions_total_by_type:sum_rate30s
    expr: sum(rate(django_http_exceptions_total_by_type[30s])) BY (job, type)
  - record: job:django_http_exceptions_total_by_view:sum_rate30s
    expr: sum(rate(django_http_exceptions_total_by_view[30s])) BY (job, view)
  - record: job:django_http_requests_latency_including_middlewares_seconds:quantile_rate30s
    expr: histogram_quantile(0.5, sum(rate(django_http_requests_latency_including_middlewares_seconds_bucket[30s]))
      BY (job, le))
    labels:
      quantile: "50"
  - record: job:django_http_requests_latency_including_middlewares_seconds:quantile_rate30s
    expr: histogram_quantile(0.95, sum(rate(django_http_requests_latency_including_middlewares_seconds_bucket[30s]))
      BY (job, le))
    labels:
      quantile: "95"
  - record: job:django_http_requests_latency_including_middlewares_seconds:quantile_rate30s
    expr: histogram_quantile(0.99, sum(rate(django_http_requests_latency_including_middlewares_seconds_bucket[30s]))
      BY (job, le))
    labels:
      quantile: "99"
  - record: job:django_http_requests_latency_including_middlewares_seconds:quantile_rate30s
    expr: histogram_quantile(0.999, sum(rate(django_http_requests_latency_including_middlewares_seconds_bucket[30s]))
      BY (job, le))
    labels:
      quantile: "99.9"
  - record: job:django_http_requests_latency_seconds:quantile_rate30s
    expr: histogram_quantile(0.5, sum(rate(django_http_requests_latency_seconds_bucket[30s]))
      BY (job, le))
    labels:
      quantile: "50"
  - record: job:django_http_requests_latency_seconds:quantile_rate30s
    expr: histogram_quantile(0.95, sum(rate(django_http_requests_latency_seconds_bucket[30s]))
      BY (job, le))
    labels:
      quantile: "95"
  - record: job:django_http_requests_latency_seconds:quantile_rate30s
    expr: histogram_quantile(0.99, sum(rate(django_http_requests_latency_seconds_bucket[30s]))
      BY (job, le))
    labels:
      quantile: "99"
  - record: job:django_http_requests_latency_seconds:quantile_rate30s
    expr: histogram_quantile(0.999, sum(rate(django_http_requests_latency_seconds_bucket[30s]))
      BY (job, le))
    labels:
      quantile: "99.9"
  - record: job:django_model_inserts_total:sum_rate1m
    expr: sum(rate(django_model_inserts_total[1m])) BY (job, model)
  - record: job:django_model_updates_total:sum_rate1m
    expr: sum(rate(django_model_updates_total[1m])) BY (job, model)
  - record: job:django_model_deletes_total:sum_rate1m
    expr: sum(rate(django_model_deletes_total[1m])) BY (job, model)
  - record: job:django_db_new_connections_total:sum_rate30s
    expr: sum(rate(django_db_new_connections_total[30s])) BY (alias, vendor)
  - record: job:django_db_new_connection_errors_total:sum_rate30s
    expr: sum(rate(django_db_new_connection_errors_total[30s])) BY (alias, vendor)
  - record: job:django_db_execute_total:sum_rate30s
    expr: sum(rate(django_db_execute_total[30s])) BY (alias, vendor)
  - record: job:django_db_execute_many_total:sum_rate30s
    expr: sum(rate(django_db_execute_many_total[30s])) BY (alias, vendor)
  - record: job:django_db_errors_total:sum_rate30s
    expr: sum(rate(django_db_errors_total[30s])) BY (alias, vendor, type)
  - record: job:django_migrations_applied_total:max
    expr: max(django_migrations_applied_total) BY (job, connection)
  - record: job:django_migrations_unapplied_total:max
    expr: max(django_migrations_unapplied_total) BY (job, connection)
- "name": django
  "rules":
  - "alert": "DjangoMigrationsUnapplied"
    "annotations":
      "dashboard_url": "https://grafana.com/d/django-overview-jkwq/django-overview?var-job={{ $labels.job }}"
      "description": "The job {{ $labels.job }} has unapplied migrations."
      "summary": "Django has unapplied migrations."
    "expr": |
      sum(
        django_migrations_unapplied_total{
          job=~"django"
        }
      ) by (namespace, job)
      > 0
    "for": "15m"
    "labels":
      "severity": "warning"
  - "alert": "DjangoDatabaseException"
    "annotations":
      "dashboard_url": "https://grafana.com/d/django-overview-jkwq/django-overview?var-job={{ $labels.job }}"
      "description": "The job {{ $labels.job }} has hit the database exception {{ $labels.type }}."
      "summary": "Django database exception."
    "expr": |
      sum (
        increase(
          django_db_errors_total{
            job=~"django"
          }[10m]
        )
      ) by (type, namespace, job)
      > 0
    "labels":
      "severity": "warning"
  - "alert": "DjangoHighHttp4xxErrorRate"
    "annotations":
      "dashboard_url": "https://grafana.com/d/django-requests-by-view-jkwq/django-requests-by-view?var-job={{ $labels.job }}&var-view={{ $labels.view }}"
      "description": "More than 5% HTTP requests with status 4xx for {{ $labels.job }}/{{ $labels.view }} the past 5m."
      "summary": "Django high HTTP 4xx error rate."
    "expr": |
      sum(
        rate(
          django_http_responses_total_by_status_view_method_total{
            job=~"django",
            status=~"^4.*",
            view!~"<unnamed view>|health_check:health_check_home|prometheus-django-metrics"
          }[5m]
        )
      )  by (namespace, job, view)
      /
      sum(
        rate(
          django_http_responses_total_by_status_view_method_total{
            job=~"django",
            view!~"<unnamed view>|health_check:health_check_home|prometheus-django-metrics"
          }[5m]
        )
      )  by (namespace, job, view)
      * 100 > 5
    "labels":
      "severity": "warning"
  - "alert": "DjangoHighHttp5xxErrorRate"
    "annotations":
      "dashboard_url": "https://grafana.com/d/django-requests-by-view-jkwq/django-requests-by-view?var-job={{ $labels.job }}&var-view={{ $labels.view }}"
      "description": "More than 5% HTTP requests with status 5xx for {{ $labels.job }}/{{ $labels.view }} the past 5m."
      "summary": "Django high HTTP 5xx error rate."
    "expr": |
      sum(
        rate(
          django_http_responses_total_by_status_view_method_total{
            job=~"django",
            status=~"^5.*",
            view!~"<unnamed view>|health_check:health_check_home|prometheus-django-metrics"
          }[5m]
        )
      )  by (namespace, job, view)
      /
      sum(
        rate(
          django_http_responses_total_by_status_view_method_total{
            job=~"django",
            view!~"<unnamed view>|health_check:health_check_home|prometheus-django-metrics"
          }[5m]
        )
      )  by (namespace, job, view)
      * 100 > 5
    "labels":
      "severity": "warning"
- name: minio-alerts
  rules:
  - alert: NodesOffline
    expr: avg_over_time(minio_cluster_nodes_offline_total{job="minio"}[5m]) > 0
    for: 10m
    labels:
      severity: warn
    annotations:
      summary: "Node down in MinIO deployment"
      description: "Node(s) in cluster {{ $labels.instance }} offline for more than 5 minutes"

  - alert: DisksOffline
    expr: avg_over_time(minio_cluster_disk_offline_total{job="minio"}[5m]) > 0
    for: 10m
    labels:
      severity: warn
    annotations:
      summary: "Disks down in MinIO deployment"
      description: "Disks(s) in cluster {{ $labels.instance }} offline for more than 5 minutes"